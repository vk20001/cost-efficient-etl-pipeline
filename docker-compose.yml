version: '3.8'

services:
  postgres:
    image: postgres:15
    container_name: postgres
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "6379:6379"

  statsd-exporter:
    image: prom/statsd-exporter
    container_name: statsd-exporter
    ports:
      - "9102:9102"
    command:
      - "--statsd.listen-udp=:8125"
      - "--web.listen-address=:9102"

  airflow-init:
    build:
      context: .
      dockerfile: ./docker/Dockerfile.airflow
    image: airflow-with-dbt
    depends_on:
      - postgres
    environment:
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__CORE__SQL_ALCHEMY_CONN: postgresql+psycopg2://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres/${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      AIRFLOW__METRICS__ENABLE: 'true'
      AIRFLOW__METRICS__STATSD_ON: 'True'
      AIRFLOW__METRICS__STATSD_HOST: statsd-exporter
      AIRFLOW__METRICS__STATSD_PORT: 8125
      AIRFLOW__METRICS__STATSD_PREFIX: airflow
    volumes:
      - ./dags:/opt/airflow/dags
      - ./dbt_project:/opt/airflow/dbt_project
      - ./src:/opt/airflow/src
      - ./config:/opt/airflow/config
      - ./gx:/opt/airflow/gx
      - ./data:/opt/airflow/data
      - ./logs/airflow:/opt/airflow/logs
      - ./requirements.txt:/requirements.txt
      - ./config/dbt:/home/airflow/.dbt
    entrypoint: >
      bash -c "pip install -r /requirements.txt &&
               airflow db migrate &&
               airflow users create --username admin --password admin \
               --firstname Vaishnavi --lastname DataQueen \
               --role Admin --email vaishnavi@example.com"

  airflow-webserver:
    build:
      context: .
      dockerfile: ./docker/Dockerfile.airflow
    image: airflow-with-dbt
    depends_on:
      - airflow-init
    environment:
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__CORE__SQL_ALCHEMY_CONN: postgresql+psycopg2://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres/${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      AIRFLOW__METRICS__ENABLE: 'true'
      AIRFLOW__METRICS__STATSD_ON: 'True'
      AIRFLOW__METRICS__STATSD_HOST: statsd-exporter
      AIRFLOW__METRICS__STATSD_PORT: 8125
      AIRFLOW__METRICS__STATSD_PREFIX: airflow
      AIRFLOW__CORE__FERNET_KEY: ''
      AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION: 'false'
      AIRFLOW__CORE__LOAD_EXAMPLES: 'false'
      AIRFLOW__WEBSERVER__EXPOSE_CONFIG: 'true'      
    volumes:
      - ./dags:/opt/airflow/dags
      - ./dbt_project:/opt/airflow/dbt_project
      - ./src:/opt/airflow/src
      - ./config:/opt/airflow/config
      - ./gx:/opt/airflow/gx
      - ./data:/opt/airflow/data
      - ./logs/airflow:/opt/airflow/logs
      - ./requirements.txt:/requirements.txt
      - ./.env:/.env
      - ./config/dbt:/home/airflow/.dbt
    ports:
      - "8080:8080"
    command: bash -c "pip install -r /requirements.txt && airflow webserver"
    restart: always

  airflow-scheduler:
    build:
      context: .
      dockerfile: ./docker/Dockerfile.airflow
    image: airflow-with-dbt
    depends_on:
      - airflow-webserver
    environment:
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__CORE__SQL_ALCHEMY_CONN: postgresql+psycopg2://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres/${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      AIRFLOW__METRICS__ENABLE: 'true'
      AIRFLOW__METRICS__STATSD_ON: 'True'
      AIRFLOW__METRICS__STATSD_HOST: statsd-exporter
      AIRFLOW__METRICS__STATSD_PORT: 8125
      AIRFLOW__METRICS__STATSD_PREFIX: airflow
      AIRFLOW__CORE__FERNET_KEY: ''
      AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION: 'false'
      AIRFLOW__CORE__LOAD_EXAMPLES: 'false'
      AIRFLOW__WEBSERVER__EXPOSE_CONFIG: 'true'
    volumes:
      - ./dags:/opt/airflow/dags
      - ./dbt_project:/opt/airflow/dbt_project
      - ./src:/opt/airflow/src
      - ./config:/opt/airflow/config
      - ./gx:/opt/airflow/gx
      - ./data:/opt/airflow/data
      - ./logs/airflow:/opt/airflow/logs
      - ./requirements.txt:/requirements.txt
      - ./.env:/.env
      - ./config/dbt:/home/airflow/.dbt
    command: bash -c "pip install -r /requirements.txt && airflow scheduler"
    restart: always

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    restart: always
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"

  grafana:
    image: grafana/grafana
    container_name: grafana
    depends_on:
      - prometheus
    ports:
      - "3000:3000"
    restart: always
    volumes:
    - grafana-storage:/var/lib/grafana
    - ./monitoring/grafana/provisioning:/etc/grafana/provisioning


volumes:
  pgdata:
  grafana-storage:
