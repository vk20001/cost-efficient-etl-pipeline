name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:            # ✅ security best-practice
  contents: read
  pull-requests: read

jobs:
  # ------------- LINT & STYLE -------------
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install linters
        run: |
          python -m pip install --upgrade pip
          pip install ruff black

      - name: Ruff (fast Python linter)
        run: ruff .

      - name: Black (code-style check)
        run: black --check --diff .

  # ------------- UNIT TESTS --------------
  tests:
    runs-on: ubuntu-latest
    needs: lint                # ⏳ runs only if lint passes
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest pytest-cov

      - name: Run unit tests with coverage
        run: |
          pytest tests/test_etl --cov=src --cov-report=xml

      # Optional: upload coverage to Codecov (if you create the token)
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        if: ${{ env.CODECOV_TOKEN != '' }}
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

  # ------------- GREAT EXPECTATIONS ------
  ge-validation:
    runs-on: ubuntu-latest
    needs: tests
    if: ${{ always() }}        # still runs even if tests fail, but AFTER them
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Run Great Expectations checkpoints
        run: |
          python -m pip install --upgrade pip
          pip install great_expectations
          if [ -d "gx" ]; then
            great_expectations checkpoint run gx_check_all || true
          fi
